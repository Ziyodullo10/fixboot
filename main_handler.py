from datetime import datetime


from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from asyncio import sleep


from keyboards import inline, default
from misc import dp, bot, only_numerics
import fakedraw

class Settings(StatesGroup):
    qiwi = State()
    sber = State()
    yandex = State()
    qiwi_balance = State()
    qiwi_transfer = State()
    sber_balance = State()
    yandex_money_balance = State()

@dp.message_handler(lambda message: message.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", content_types=types.ContentTypes.TEXT, state="*")
async def main(message: types.Message, state: FSMContext):
    await message.answer("<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>", reply_markup=default.Start())
    await state.finish()


@dp.message_handler(lambda message: message.text == "QIWI", content_types=types.ContentTypes.TEXT, state="*")
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer("<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã</b>", reply_markup=default.Qiwi())
    await Settings.qiwi.set()


@dp.message_handler(lambda message: message.text == "–ë–∞–ª–∞–Ω—Å", content_types=types.ContentTypes.TEXT, state=Settings.qiwi)
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer_photo(fakedraw.fake_qiwi_balance(message), caption="""<b>
–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
1Ô∏è‚É£ - –±–∞–ª–∞–Ω—Å

–ü—Ä–∏–º–µ—Ä:
500
</b>""")
    await Settings.qiwi_balance.set()



@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.qiwi_balance)
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer_photo(fakedraw.fake_qiwi_balance(message), reply_markup=inline.Exit())
    await Settings.qiwi.set()



@dp.message_handler(lambda message: message.text == "–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –¥—Ä—É–≥–æ–π –∫–æ—à–µ–ª–µ–∫", content_types=types.ContentTypes.TEXT, state=Settings.qiwi)
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer_photo(fakedraw.fake_qiwi_transfer(message), caption="""<b>
–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:

1Ô∏è‚É£ - —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
2Ô∏è‚É£ - –Ω–æ–º–µ—Ä –ø–µ—Ä–µ–≤–æ–¥–∞
3Ô∏è‚É£ - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è

–ü—Ä–∏–º–µ—Ä:
432
+78954328507
08.03.2021 –≤ 21:30
</b>""")
    await Settings.qiwi_transfer.set()


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.qiwi_transfer)
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer_photo(fakedraw.fake_qiwi_transfer(message), reply_markup=inline.Exit())
    await Settings.qiwi.set()

@dp.message_handler(lambda message: message.text == "–°–±–µ—Ä", content_types=types.ContentTypes.TEXT, state="*")
async def sber(message: types.Message, state: FSMContext):
    await message.answer("<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã</b>", reply_markup=default.Sber())
    await Settings.sber.set()

@dp.message_handler(lambda message: message.text == "–ë–∞–ª–∞–Ω—Å", content_types=types.ContentTypes.TEXT, state=Settings.sber)
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer_photo(fakedraw.fake_sber_balance(message), caption="""<b>
–í–≤–µ–¥–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:

1Ô∏è‚É£ - —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è
2Ô∏è‚É£ - –±–∞–ª–∞–Ω—Å
3Ô∏è‚É£ - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –∫–∞—Ä—Ç—ã

–ü—Ä–∏–º–µ—Ä:
14:37
25000
5324
</b>""")
    await Settings.sber_balance.set()


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.sber_balance)
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer_photo(fakedraw.fake_sber_balance(message), reply_markup=inline.Exit())
    await Settings.sber.set()


@dp.message_handler(lambda message: message.text == "–ÆMoney", content_types=types.ContentTypes.TEXT, state="*")
async def yandex_money(message: types.Message, state: FSMContext):
    await message.answer("<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã</b>", reply_markup=default.Yandex())
    await Settings.yandex.set()


@dp.message_handler(lambda message: message.text == "–ë–∞–ª–∞–Ω—Å", content_types=types.ContentTypes.TEXT, state=Settings.yandex)
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer_photo(fakedraw.fake_yandex_balance(message), caption="""<b>
–í–≤–µ–¥–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:

1Ô∏è‚É£ - —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è
2Ô∏è‚É£ - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
3Ô∏è‚É£ - –ë–∞–ª–∞–Ω—Å

–ü—Ä–∏–º–µ—Ä:
23:19
shpex
50 000,51
</b>""")
    await Settings.yandex_money_balance.set()


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.yandex_money_balance)
async def qiwi(message: types.Message, state: FSMContext):
    await message.answer_photo(fakedraw.fake_yandex_balance(message), reply_markup=inline.Exit())
    await Settings.yandex.set()


@dp.message_handler(lambda message: message.text == "üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", content_types=types.ContentTypes.TEXT, state="*")
async def info(message: types.Message, state: FSMContext):
    await message.answer(f"<b>–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º - <em>@teDDy_pereXod | –î–æ–Ω–∞—Ç - https://my.qiwi.com/OLGA-SoguLcdPcU</em></b>")

